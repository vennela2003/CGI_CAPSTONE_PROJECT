-- 1. PRODUCTS MASTER TABLE
CREATE TABLE PRODUCTS (
    PRODUCT_ID        VARCHAR2(20) PRIMARY KEY,
    PRODUCT_NAME      VARCHAR2(100) NOT NULL,
    CATEGORIES          VARCHAR2(30) NOT NULL,
    UNIT_COST         NUMBER(10,2) NOT NULL CHECK (UNIT_COST >= 0),
    WEIGHT_KG         NUMBER(10,3) NOT NULL CHECK (WEIGHT_KG > 0),
    AUTOMOTIVE_GRADE  CHAR(1) NOT NULL CHECK (AUTOMOTIVE_GRADE IN ('Y','N')),
    ACTIVE_STATUS     CHAR(1) DEFAULT 'Y' CHECK (ACTIVE_STATUS IN ('Y','N')),
    CREATED_DATE      DATE DEFAULT SYSDATE NOT NULL,
    LAST_UPDATED_DATE      DATE
);

-- 2.LOCATIONS MASTER TABLE
CREATE TABLE LOCATIONS (
    LOCATION_ID     VARCHAR2(20) PRIMARY KEY,
    LOCATION_NAME   VARCHAR2(100) NOT NULL,
    LOCATION_TYPE   VARCHAR2(20) NOT NULL CHECK (LOCATION_TYPE IN ('PLANT', 'WAREHOUSE', 'RND_LAB')),
    COUNTRY         VARCHAR2(50) NOT NULL,
    SPECIALIZATION  VARCHAR2(100),
    L_CAPACITY        NUMBER(10) CHECK (L_CAPACITY >= 0),
    ACTIVE_STATUS   CHAR(1) DEFAULT 'Y' CHECK (ACTIVE_STATUS IN ('Y','N'))
);

-- 3. SUPPLIERS MASTER TABLE
CREATE TABLE SUPPLIERS (
    SUPPLIER_ID     VARCHAR2(20) PRIMARY KEY,
    SUPPLIER_NAME   VARCHAR2(100) NOT NULL,
    COUNTRY         VARCHAR2(50) NOT NULL,
    SUPPLIER_TYPE   VARCHAR2(20) NOT NULL CHECK (SUPPLIER_TYPE IN ('OEM', 'AFTERMARKET')),
    QUALITY_RATING  NUMBER(2,1) CHECK (QUALITY_RATING BETWEEN 1 AND 5),
    LEAD_TIME_DAYS  NUMBER(5) CHECK (LEAD_TIME_DAYS >= 0),
    PAYMENT_TERMS   VARCHAR2(30) NOT NULL,
    CERTIFICATION   VARCHAR2(50) NOT NULL,
    ACTIVE_STATUS   CHAR(1) DEFAULT 'Y' CHECK (ACTIVE_STATUS IN ('Y','N'))
);

-- 4. INVENTORY MASTER TABLE
CREATE TABLE INVENTORY_MASTER (
    INVENTORY_ID     VARCHAR2(20) PRIMARY KEY,
    PRODUCT_ID       VARCHAR2(20) NOT NULL,
    LOCATION_ID      VARCHAR2(20) NOT NULL,
    CURRENT_STOCK    NUMBER(10) DEFAULT 0 CHECK (CURRENT_STOCK >= 0),
    REORDER_LEVEL    NUMBER(10) CHECK (REORDER_LEVEL >= 0),
    MAX_STOCK_LEVEL  NUMBER(10) CHECK (MAX_STOCK_LEVEL >= 0),
    SAFETY_STOCK     NUMBER(10) CHECK (SAFETY_STOCK >= 0),
    LAST_MOVEMENT    DATE,
    UNIT_COST        NUMBER(10,2) CHECK (UNIT_COST >= 0),
    CONSTRAINT FK_INV_PRODUCT FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(PRODUCT_ID),
    CONSTRAINT FK_INV_LOCATION FOREIGN KEY (LOCATION_ID) REFERENCES LOCATIONS(LOCATION_ID),
    CONSTRAINT UQ_PRODUCT_LOCATION UNIQUE (PRODUCT_ID, LOCATION_ID)
);

-- 5. INVENTORY TRANSACTIONS TABLE
CREATE TABLE INVENTORY_TRANSACTIONS (
    TRANSACTION_ID   VARCHAR2(20) PRIMARY KEY,
    PRODUCT_ID       VARCHAR2(20) NOT NULL,
    LOCATION_ID      VARCHAR2(20) NOT NULL,
    TRANSACTION_TYPE VARCHAR2(20) NOT NULL CHECK (TRANSACTION_TYPE IN ('RECEIPT', 'ISSUE', 'TRANSFER')),
    QUANTITY         NUMBER(10) NOT NULL CHECK (QUANTITY <> 0),
    UNIT_COST        NUMBER(10,2) CHECK (UNIT_COST >= 0),
    TRANSACTION_DATE       DATE DEFAULT SYSDATE NOT NULL,
    REFERENCE_NO     VARCHAR2(30),
    CREATED_BY       VARCHAR2(50) NOT NULL,
    CONSTRAINT FK_TRANS_PRODUCT FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(PRODUCT_ID),
    CONSTRAINT FK_TRANS_LOCATION FOREIGN KEY (LOCATION_ID) REFERENCES LOCATIONS(LOCATION_ID)
);

-- 6. PURCHASE ORDERS TABLE
CREATE TABLE PURCHASE_ORDERS (
    PO_NUMBER       VARCHAR2(20) PRIMARY KEY,
    SUPPLIER_ID     VARCHAR2(20) NOT NULL,
    ORDER_DATE      DATE DEFAULT SYSDATE NOT NULL,
    EXPECTED_DATE   DATE NOT NULL,
    ACTUAL_DATE     DATE,
    TOTAL_AMOUNT    NUMBER(12,2) CHECK (TOTAL_AMOUNT >= 0),
    ORDER_STATUS    VARCHAR2(20) NOT NULL CHECK (ORDER_STATUS IN ('PENDING', 'DELIVERED', 'CANCELLED')),
    CREATED_BY      VARCHAR2(50) NOT NULL,
    CONSTRAINT FK_PO_SUPPLIER FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIERS(SUPPLIER_ID)
);

-- 7. SUPPLIER PERFORMANCE TABLE
CREATE TABLE SUPPLIER_PERFORMANCE (
    PERFORMANCE_ID    VARCHAR2(20) PRIMARY KEY,
    SUPPLIER_ID       VARCHAR2(20) NOT NULL,
    PO_NUMBER         VARCHAR2(20) NOT NULL,
    DELIVERY_DATE     DATE NOT NULL,
    PROMISED_DATE     DATE NOT NULL,
    QUALITY_RATING    NUMBER(2,1) CHECK (QUALITY_RATING BETWEEN 1 AND 5),
    QTY_DELIVERED     NUMBER(10) CHECK (QTY_DELIVERED >= 0),
    QTY_REJECTED      NUMBER(10) CHECK (QTY_REJECTED >= 0),
    PERFORMANCE_MONTH VARCHAR2(7) NOT NULL, 
    CONSTRAINT FK_SP_SUPPLIER FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIERS(SUPPLIER_ID),
    CONSTRAINT FK_SP_PO FOREIGN KEY (PO_NUMBER) REFERENCES PURCHASE_ORDERS(PO_NUMBER)
);

DROP TABLE SUPPLIER_PERFORMANCE;


SELECT * FROM PRODUCTS;

SELECT * FROM LOCATIONS;

SELECT * FROM SUPPLIERS;

SELECT * FROM INVENTORY_MASTER;

SELECT * FROM INVENTORY_TRANSACTIONS;

SELECT * FROM PURCHASE_ORDERS;

SELECT * FROM SUPPLIER_PERFORMANCE;

DROP TABLE SUPPLIER_PERFORMANCE CASCADE CONSTRAINTS;


-- Disable constraints
ALTER TABLE inventory_master DISABLE CONSTRAINT FK_INV_PRODUCT;
ALTER TABLE inventory_transactions DISABLE CONSTRAINT FK_TRANS_PRODUCT;

-- Update parent first
UPDATE products
SET product_id = 'QUA-GOI-116'
WHERE product_id = 'QUA-GO/-116';

-- Update child tables
UPDATE inventory_master
SET product_id = 'QUA-GOI-116'
WHERE product_id = 'QUA-GO/-116';

UPDATE inventory_transactions
SET product_id = 'QUA-GOI-116'
WHERE product_id = 'QUA-GO/-116';

-- Re-enable constraints
ALTER TABLE inventory_master ENABLE CONSTRAINT FK_INV_PRODUCT;
ALTER TABLE inventory_transactions ENABLE CONSTRAINT FK_TRANS_PRODUCT;


-- Repeat for all relevant tables
COMMIT;

SELECT *
FROM products
WHERE product_id = 'QUA-GO/-116';


